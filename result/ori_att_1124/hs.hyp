class Archmage ( Minion Card ) : def __init__ ( self ) : super ( ) . __init__ ( ` Archmage ` , 6 , CHARACTER_CLASS . ALL , CARD_RARITY . COMMON ) def create_minion ( self , player ) : return Minion ( 4 , 7 , deathrattle = Deathrattle ( Summon ( Thaddius ( ) ) , Player Selector ( ) , In Graveyard ( Stalagg ( ) ) ) )
class Druid Of The Flame ( Minion Card ) : def __init__ ( self ) : super ( ) . __init__ ( ` Booty Bay ` , 4 , CHARACTER_CLASS . ALL , CARD_RARITY . COMMON ) def create_minion ( self , player ) : return Minion ( 5 , 4 , deathrattle = Deathrattle ( Summon ( Thaddius ( ) ) , Player Selector ( ) , In Graveyard ( Stalagg ( ) ) ) )
class Druid Of The Flame ( Minion Card ) : def __init__ ( self ) : super ( ) . __init__ ( ` Darkscale Healer ` , 5 , CHARACTER_CLASS . ALL , CARD_RARITY . COMMON ) def create_minion ( self , player ) : return Minion ( 4 , 5 , effects = [ Effect ( Spell Cast ( player = Both Player ( ) ) , Action Tag ( Give ( Change Attack ( 1 ) ) , Self Selector ( ) ) ) ] )
class Druid Of The Flame ( Minion Card ) : def __init__ ( self ) : super ( ) . __init__ ( ` Fiery War ` , 2 , CHARACTER_CLASS . ALL , CARD_RARITY . COMMON ) def create_minion ( self , player ) : return Minion ( 3 , 3 , deathrattle = Deathrattle ( Summon ( Thaddius ( ) ) , Player Selector ( ) , In Graveyard ( Stalagg ( ) ) ) )
class Druid Of The Flame ( Minion Card ) : def __init__ ( self ) : super ( ) . __init__ ( ` Frostwolf Warlord ` , 5 , CHARACTER_CLASS . ALL , CARD_RARITY . COMMON ) def create_minion ( self , player ) : return Minion ( 4 , 4 , effects = [ Effect ( Spell Cast ( player = Both Player ( ) ) , Action Tag ( Give ( Change Attack ( 1 ) ) , Self Selector ( ) ) ) ] )
class Hellfire ( Spell Card ) : def __init__ ( self ) : super ( ) . __init__ ( ` Hellfire ` , 4 , CHARACTER_CLASS . DRUID , CARD_RARITY . COMMON ) def use ( self , player , game ) : super ( ) . use ( player , game ) targets = copy . copy ( game . other_player . minions ) targets . extend ( game . current_player . minions ) for minion in targets : minion . damage ( player . effective_spell_damage ( 2 ) , self )
class Innervate ( Spell Card ) : def __init__ ( self ) : super ( ) . __init__ ( ` Innervate ` , 0 , CHARACTER_CLASS . MAGE , CARD_RARITY . COMMON ) def use ( self , player , game ) : super ( ) . use ( player , game ) targets = copy . copy ( game . other_player . minions ) targets . extend ( game . current_player . minions ) for minion in targets : minion . damage ( player . effective_spell_damage ( 2 ) , self )
class Druid Of The Flame ( Minion Card ) : def __init__ ( self ) : super ( ) . __init__ ( ` Magma Rager ` , 3 , CHARACTER_CLASS . ALL , CARD_RARITY . COMMON ) def create_minion ( self , player ) : return Minion ( 5 , 1 , deathrattle = Deathrattle ( Summon ( Thaddius ( ) ) , Player Selector ( ) , In Graveyard ( Stalagg ( ) ) ) )
class Druid Of The Flame ( Spell Card ) : def __init__ ( self ) : super ( ) . __init__ ( ` Mortal Coil ` , 1 , CHARACTER_CLASS . SHAMAN , CARD_RARITY . COMMON ) def use ( self , player , game ) : super ( ) . use ( player , game ) for minion in copy . copy ( game . other_player . minions ) : minion . damage ( player . effective_spell_damage ( 2 ) , self ) game . other_player . hero . damage ( player . effective_spell_damage ( 2 ) , self )
class Polymorph ( Spell Card ) : def __init__ ( self ) : super ( ) . __init__ ( ` Polymorph ` , 4 , CHARACTER_CLASS . DRUID , CARD_RARITY . COMMON ) def use ( self , player , game ) : super ( ) . use ( player , game ) targets = copy . copy ( game . other_player . minions ) targets . extend ( game . current_player . minions ) for minion in targets : minion . damage ( player . effective_spell_damage ( 2 ) , self )
class Druid Of The Flame ( Minion Card ) : def __init__ ( self ) : super ( ) . __init__ ( ` Searing Totem ` , 1 , CHARACTER_CLASS . SHAMAN , CARD_RARITY . FREE , False , MINION_TYPE . TOTEM ) def create_minion ( self , player ) : return Minion ( 1 , 1 )
class Druid Of The Flame ( Minion Card ) : def __init__ ( self ) : super ( ) . __init__ ( ` Silverback Patriarch ` , 3 , CHARACTER_CLASS . ALL , CARD_RARITY . COMMON ) def create_minion ( self , player ) : return Minion ( 1 , 4 , effects = [ Effect ( Spell Cast ( player = Both Player ( ) ) , Action Tag ( Give ( Change Attack ( 1 ) ) , Self Selector ( ) ) ) ] )
class Druid Of The Flame ( Minion Card ) : def __init__ ( self ) : super ( ) . __init__ ( ` Stormwind Knight ` , 4 , CHARACTER_CLASS . ALL , CARD_RARITY . COMMON ) def create_minion ( self , player ) : return Minion ( 2 , 5 , effects = [ Effect ( Spell Cast ( player = Both Player ( ) ) , Action Tag ( Give ( Change Attack ( 1 ) ) , Self Selector ( ) ) ) ] )
class Druid Of The Flame ( Minion Card ) : def __init__ ( self ) : super ( ) . __init__ ( ` Voodoo Doctor ` , 1 , CHARACTER_CLASS . ALL , CARD_RARITY . COMMON ) def create_minion ( self , player ) : return Minion ( 2 , 1 , effects = [ Effect ( Spell Cast ( player = Both Player ( ) ) , Action Tag ( Give ( Change Attack ( 1 ) ) , Self Selector ( ) ) ) ] )
class Druid Of The Flame ( Spell Card ) : def __init__ ( self ) : super ( ) . __init__ ( ` Astral Communion ` , 4 , CHARACTER_CLASS . SHAMAN , CARD_RARITY . COMMON ) def use ( self , player , game ) : super ( ) . use ( player , game ) for minion in copy . copy ( game . other_player . minions ) : minion . damage ( player . effective_spell_damage ( 2 ) , self ) game . other_player . hero . damage ( player . effective_spell_damage ( 2 ) , self )
class Annoy - o - Tron ( Minion Card ) : def __init__ ( self ) : super ( ) . __init__ ( ` Annoy - o - Tron ` , 2 , CHARACTER_CLASS . ALL , CARD_RARITY . COMMON ) def create_minion ( self , player ) : return Minion ( 1 , 2 , deathrattle = Deathrattle ( Summon ( Thaddius ( ) ) , Player Selector ( ) , In Graveyard ( Stalagg ( ) ) ) )
class Druid Of The Flame ( Minion Card ) : def __init__ ( self ) : super ( ) . __init__ ( ` Burly Rockjaw ` , 4 , CHARACTER_CLASS . ALL , CARD_RARITY . COMMON ) def create_minion ( self , player ) : return Minion ( 3 , 5 , effects = [ Effect ( Spell Cast ( player = Both Player ( ) ) , Action Tag ( Give ( Change Attack ( 1 ) ) , Self Selector ( ) ) ) ] )
class Druid Of The Flame ( Minion Card ) : def __init__ ( self ) : super ( ) . __init__ ( ` Cogmaster ` s ` , 3 , CHARACTER_CLASS . ALL , CARD_RARITY . COMMON ) def create_minion ( self , player ) : return Minion ( 1 , 3 , effects = [ Effect ( Spell Cast ( player = Both Player ( ) ) , Action Tag ( Give ( Change Attack ( 1 ) ) , Self Selector ( ) ) ) ] )
class Druid Of The Flame ( Spell Card ) : def __init__ ( self ) : super ( ) . __init__ ( ` Echo of Medivh ` , 4 , CHARACTER_CLASS . PALADIN , CARD_RARITY . COMMON ) def use ( self , player , game ) : super ( ) . use ( player , game ) targets = copy . copy ( game . other_player . minions ) targets . extend ( game . current_player . minions ) for minion in targets : minion . damage ( player . effective_spell_damage ( 1 ) , self )
class Druid Of The Flame ( Minion Card ) : def __init__ ( self ) : super ( ) . __init__ ( ` Floating Watcher ` , 5 , CHARACTER_CLASS . ALL , CARD_RARITY . COMMON ) def create_minion ( self , player ) : return Minion ( 4 , 4 , effects = [ Effect ( Spell Cast ( player = Both Player ( ) ) , Action Tag ( Give ( Change Attack ( 1 ) ) , Self Selector ( ) ) ) ] )
class Druid Of The Flame ( Minion Card ) : def __init__ ( self ) : super ( ) . __init__ ( ` Gnomish Experimenter ` , 3 , CHARACTER_CLASS . ALL , CARD_RARITY . COMMON ) def create_minion ( self , player ) : return Minion ( 3 , 2 , effects = [ Effect ( Spell Cast ( player = Both Player ( ) ) , Action Tag ( Give ( Change Attack ( 1 ) ) , Self Selector ( ) ) ) ] )
class Druid Of The Flame ( Minion Card ) : def __init__ ( self ) : super ( ) . __init__ ( ` Iron Juggernaut ` , 6 , CHARACTER_CLASS . ALL , CARD_RARITY . COMMON ) def create_minion ( self , player ) : return Minion ( 6 , 5 , effects = [ Effect ( Spell Cast ( player = Both Player ( ) ) , Action Tag ( Give ( Change Attack ( 1 ) ) , Self Selector ( ) ) ) ] )
class Druid Of The Flame ( Minion Card ) : def __init__ ( self ) : super ( ) . __init__ ( ` Madder Bomber ` , 5 , CHARACTER_CLASS . ALL , CARD_RARITY . COMMON ) def create_minion ( self , player ) : return Minion ( 5 , 4 , effects = [ Effect ( Spell Cast ( player = Both Player ( ) ) , Action Tag ( Give ( Change Attack ( 1 ) ) , Self Selector ( ) ) ) ] )
class Mini - Mage ( Minion Card ) : def __init__ ( self ) : super ( ) . __init__ ( ` Mini - Mage ` , 4 , CHARACTER_CLASS . ALL , CARD_RARITY . COMMON ) def create_minion ( self , player ) : return Minion ( 4 , 1 , deathrattle = Deathrattle ( Summon ( Thaddius ( ) ) , Player Selector ( ) , In Graveyard ( Stalagg ( ) ) ) )
class Druid Of The Flame ( Minion Card ) : def __init__ ( self ) : super ( ) . __init__ ( ` Piloted Sky ` , 6 , CHARACTER_CLASS . ALL , CARD_RARITY . COMMON ) def create_minion ( self , player ) : return Minion ( 6 , 4 , deathrattle = Deathrattle ( Summon ( Thaddius ( ) ) , Player Selector ( ) , In Graveyard ( Stalagg ( ) ) ) )
class Druid Of The Flame ( Minion Card ) : def __init__ ( self ) : super ( ) . __init__ ( ` Scarlet Purifier ` , 3 , CHARACTER_CLASS . ALL , CARD_RARITY . COMMON ) def create_minion ( self , player ) : return Minion ( 4 , 3 , effects = [ Effect ( Spell Cast ( player = Both Player ( ) ) , Action Tag ( Give ( Change Attack ( 1 ) ) , Self Selector ( ) ) ) ] )
class Druid Of The Flame ( Minion Card ) : def __init__ ( self ) : super ( ) . __init__ ( ` Siltfin Spiritwalker ` , 4 , CHARACTER_CLASS . ALL , CARD_RARITY . COMMON ) def create_minion ( self , player ) : return Minion ( 2 , 5 , effects = [ Effect ( Spell Cast ( player = Both Player ( ) ) , Action Tag ( Give ( Change Attack ( 1 ) ) , Self Selector ( ) ) ) ] )
class Druid Of The Flame ( Minion Card ) : def __init__ ( self ) : super ( ) . __init__ ( ` Tinkertown Technician ` , 3 , CHARACTER_CLASS . ALL , CARD_RARITY . COMMON ) def create_minion ( self , player ) : return Minion ( 3 , 3 , effects = [ Effect ( Spell Cast ( player = Both Player ( ) ) , Action Tag ( Give ( Change Attack ( 1 ) ) , Self Selector ( ) ) ) ] )
class Voljin ( Minion Card ) : def __init__ ( self ) : super ( ) . __init__ ( ` Voljin ` , 5 , CHARACTER_CLASS . ALL , CARD_RARITY . COMMON ) def create_minion ( self , player ) : return Minion ( 6 , 2 , deathrattle = Deathrattle ( Summon ( Thaddius ( ) ) , Player Selector ( ) , In Graveyard ( Stalagg ( ) ) ) )
class Druid Of The Flame ( Minion Card ) : def __init__ ( self ) : super ( ) . __init__ ( ` Death ` s ` , 4 , CHARACTER_CLASS . ALL , CARD_RARITY . COMMON ) def create_minion ( self , player ) : return Minion ( 4 , 4 , deathrattle = Deathrattle ( Summon ( Thaddius ( ) ) , Player Selector ( ) , In Graveyard ( Stalagg ( ) ) ) )
class Maexxna ( Minion Card ) : def __init__ ( self ) : super ( ) . __init__ ( ` Maexxna ` , 6 , CHARACTER_CLASS . ALL , CARD_RARITY . COMMON ) def create_minion ( self , player ) : return Minion ( 2 , 8 , deathrattle = Deathrattle ( Summon ( Thaddius ( ) ) , Player Selector ( ) , In Graveyard ( Stalagg ( ) ) ) )
class Druid Of The Flame ( Minion Card ) : def __init__ ( self ) : super ( ) . __init__ ( ` Sludge Belcher ` , 5 , CHARACTER_CLASS . ALL , CARD_RARITY . COMMON ) def create_minion ( self , player ) : return Minion ( 3 , 5 , effects = [ Effect ( Spell Cast ( player = Both Player ( ) ) , Action Tag ( Give ( Change Attack ( 1 ) ) , Self Selector ( ) ) ) ] )
class Voidcaller ( Minion Card ) : def __init__ ( self ) : super ( ) . __init__ ( ` Voidcaller ` , 4 , CHARACTER_CLASS . ALL , CARD_RARITY . COMMON ) def create_minion ( self , player ) : return Minion ( 3 , 4 , deathrattle = Deathrattle ( Summon ( Thaddius ( ) ) , Player Selector ( ) , In Graveyard ( Stalagg ( ) ) ) )
class Alexstrasza ( Minion Card ) : def __init__ ( self ) : super ( ) . __init__ ( ` Alexstrasza ` , 9 , CHARACTER_CLASS . ALL , CARD_RARITY . COMMON ) def create_minion ( self , player ) : return Minion ( 8 , 8 , deathrattle = Deathrattle ( Summon ( Thaddius ( ) ) , Player Selector ( ) , In Graveyard ( Stalagg ( ) ) ) )
class Druid Of The Flame ( Minion Card ) : def __init__ ( self ) : super ( ) . __init__ ( ` Arcane Golem ` , 3 , CHARACTER_CLASS . ALL , CARD_RARITY . COMMON ) def create_minion ( self , player ) : return Minion ( 4 , 2 , deathrattle = Deathrattle ( Summon ( Thaddius ( ) ) , Player Selector ( ) , In Graveyard ( Stalagg ( ) ) ) )
class Druid Of The Flame ( Minion Card ) : def __init__ ( self ) : super ( ) . __init__ ( ` Baine Bloodhoof ` , 4 , CHARACTER_CLASS . ALL , CARD_RARITY . COMMON ) def create_minion ( self , player ) : return Minion ( 4 , 5 , effects = [ Effect ( Spell Cast ( player = Both Player ( ) ) , Action Tag ( Give ( Change Attack ( 1 ) ) , Self Selector ( ) ) ) ] )
class Druid Of The Flame ( Spell Card ) : def __init__ ( self ) : super ( ) . __init__ ( ` Blade Flurry ` , 2 , CHARACTER_CLASS . SHAMAN , CARD_RARITY . COMMON ) def use ( self , player , game ) : super ( ) . use ( player , game ) for minion in copy . copy ( game . other_player . minions ) : minion . damage ( player . effective_spell_damage ( 2 ) , self ) game . other_player . hero . damage ( player . effective_spell_damage ( 2 ) , self )
class Brawl ( Spell Card ) : def __init__ ( self ) : super ( ) . __init__ ( ` Brawl ` , 5 , CHARACTER_CLASS . DRUID , CARD_RARITY . COMMON ) def use ( self , player , game ) : super ( ) . use ( player , game ) targets = copy . copy ( game . other_player . minions ) targets . extend ( game . current_player . minions ) for minion in targets : minion . damage ( player . effective_spell_damage ( 2 ) , self )
class Conceal ( Spell Card ) : def __init__ ( self ) : super ( ) . __init__ ( ` Conceal ` , 1 , CHARACTER_CLASS . DRUID , CARD_RARITY . COMMON ) def use ( self , player , game ) : super ( ) . use ( player , game ) targets = copy . copy ( game . other_player . minions ) targets . extend ( game . current_player . minions ) for minion in targets : minion . damage ( player . effective_spell_damage ( 2 ) , self )
class Defender ( Minion Card ) : def __init__ ( self ) : super ( ) . __init__ ( ` Defender ` , 1 , CHARACTER_CLASS . ALL , CARD_RARITY . COMMON , minion_type = MINION_TYPE . BEAST ) def create_minion ( self , player ) : return Minion ( 2 , 1 )
class Doomguard ( Minion Card ) : def __init__ ( self ) : super ( ) . __init__ ( ` Doomguard ` , 5 , CHARACTER_CLASS . ALL , CARD_RARITY . COMMON ) def create_minion ( self , player ) : return Minion ( 5 , 7 , deathrattle = Deathrattle ( Summon ( Thaddius ( ) ) , Player Selector ( ) , In Graveyard ( Stalagg ( ) ) ) )
class Druid Of The Flame ( Minion Card ) : def __init__ ( self ) : super ( ) . __init__ ( ` Earth Elemental ` , 5 , CHARACTER_CLASS . ALL , CARD_RARITY . COMMON ) def create_minion ( self , player ) : return Minion ( 7 , 8 , effects = [ Effect ( Spell Cast ( player = Both Player ( ) ) , Action Tag ( Give ( Change Attack ( 1 ) ) , Self Selector ( ) ) ) ] )
class Druid Of The Flame ( Spell Card ) : def __init__ ( self ) : super ( ) . __init__ ( ` Explosive Trap ` , 2 , CHARACTER_CLASS . MAGE , CARD_RARITY . COMMON ) def use ( self , player , game ) : super ( ) . use ( player , game ) for minion in copy . copy ( game . other_player . minions ) : minion . damage ( player . effective_spell_damage ( 2 ) , self ) game . other_player . hero . damage ( player . effective_spell_damage ( 2 ) , self )
class Druid Of The Flame ( Minion Card ) : def __init__ ( self ) : super ( ) . __init__ ( ` Flame of Azzinoth ` , 1 , CHARACTER_CLASS . ALL , CARD_RARITY . COMMON ) def create_minion ( self , player ) : return Minion ( 2 , 1 , deathrattle = Deathrattle ( Summon ( Thaddius ( ) ) , Player Selector ( ) , In Graveyard ( Stalagg ( ) ) ) )
class Gnoll ( Minion Card ) : def __init__ ( self ) : super ( ) . __init__ ( ` Gnoll ` , 2 , CHARACTER_CLASS . ALL , CARD_RARITY . COMMON ) def create_minion ( self , player ) : return Minion ( 2 , 2 , deathrattle = Deathrattle ( Summon ( Thaddius ( ) ) , Player Selector ( ) , In Graveyard ( Stalagg ( ) ) ) )
class Druid Of The Flame ( Spell Card ) : def __init__ ( self ) : super ( ) . __init__ ( ` Holy Wrath ` , 5 , CHARACTER_CLASS . HUNTER , CARD_RARITY . COMMON ) def use ( self , player , game ) : super ( ) . use ( player , game ) for minion in copy . copy ( game . other_player . minions ) : minion . damage ( player . effective_spell_damage ( 2 ) , self ) player . draw ( )
class Infernal ( Minion Card ) : def __init__ ( self ) : super ( ) . __init__ ( ` Infernal ` , 6 , CHARACTER_CLASS . ALL , CARD_RARITY . COMMON ) def create_minion ( self , player ) : return Minion ( 6 , 6 , deathrattle = Deathrattle ( Summon ( Thaddius ( ) ) , Player Selector ( ) , In Graveyard ( Stalagg ( ) ) ) )
class Lightwarden ( Minion Card ) : def __init__ ( self ) : super ( ) . __init__ ( ` Lightwarden ` , 1 , CHARACTER_CLASS . ALL , CARD_RARITY . COMMON ) def create_minion ( self , player ) : return Minion ( 1 , 2 , deathrattle = Deathrattle ( Summon ( Thaddius ( ) ) , Player Selector ( ) , In Graveyard ( Stalagg ( ) ) ) )
class Druid Of The Flame ( Minion Card ) : def __init__ ( self ) : super ( ) . __init__ ( ` Mana Wraith Wraith ` , 2 , CHARACTER_CLASS . ALL , CARD_RARITY . COMMON ) def create_minion ( self , player ) : return Minion ( 2 , 2 , deathrattle = Deathrattle ( Summon ( Thaddius ( ) ) , Player Selector ( ) , In Graveyard ( Stalagg ( ) ) ) )
class Misdirection ( Spell Card ) : def __init__ ( self ) : super ( ) . __init__ ( ` Misdirection ` , 2 , CHARACTER_CLASS . DRUID , CARD_RARITY . COMMON ) def use ( self , player , game ) : super ( ) . use ( player , game ) targets = copy . copy ( game . other_player . minions ) targets . extend ( game . current_player . minions ) for minion in targets : minion . damage ( player . effective_spell_damage ( 2 ) , self )
class Druid Of The Flame ( Spell Card ) : def __init__ ( self ) : super ( ) . __init__ ( ` Noble Sacrifice ` , 1 , CHARACTER_CLASS . SHAMAN , CARD_RARITY . COMMON ) def use ( self , player , game ) : super ( ) . use ( player , game ) for minion in copy . copy ( game . other_player . minions ) : minion . damage ( player . effective_spell_damage ( 2 ) , self ) game . other_player . hero . damage ( player . effective_spell_damage ( 2 ) , self )
class Druid Of The Flame ( Spell Card ) : def __init__ ( self ) : super ( ) . __init__ ( ` Power of the Wild ` , 2 , CHARACTER_CLASS . DRUID , CARD_RARITY . COMMON ) def use ( self , player , game ) : super ( ) . use ( player , game ) for minion in copy . copy ( game . other_player . minions ) : minion . damage ( player . effective_spell_damage ( 2 ) , self ) player . draw ( )
class Redemption ( Spell Card ) : def __init__ ( self ) : super ( ) . __init__ ( ` Redemption ` , 1 , CHARACTER_CLASS . DRUID , CARD_RARITY . COMMON ) def use ( self , player , game ) : super ( ) . use ( player , game ) targets = copy . copy ( game . other_player . minions ) targets . extend ( game . current_player . minions ) for minion in targets : minion . damage ( player . effective_spell_damage ( 2 ) , self )
class Druid Of The Flame ( Spell Card ) : def __init__ ( self ) : super ( ) . __init__ ( ` Shadow Madness ` , 4 , CHARACTER_CLASS . SHAMAN , CARD_RARITY . COMMON ) def use ( self , player , game ) : super ( ) . use ( player , game ) targets = copy . copy ( game . other_player . minions ) targets . extend ( game . current_player . minions ) for minion in targets : minion . damage ( player . effective_spell_damage ( 1 ) , self )
class Druid Of The Flame ( Spell Card ) : def __init__ ( self ) : super ( ) . __init__ ( ` Siphon Soul ` , 6 , CHARACTER_CLASS . PRIEST , CARD_RARITY . COMMON ) def use ( self , player , game ) : super ( ) . use ( player , game ) for minion in copy . copy ( game . other_player . minions ) : minion . damage ( player . effective_spell_damage ( 2 ) , self ) game . other_player . hero . damage ( player . effective_spell_damage ( 2 ) , self )
class Spellbender ( Minion Card ) : def __init__ ( self ) : super ( ) . __init__ ( ` Spellbender ` , 0 , CHARACTER_CLASS . ALL , CARD_RARITY . COMMON ) def create_minion ( self , player ) : return Minion ( 1 , 3 , deathrattle = Deathrattle ( Summon ( Thaddius ( ) ) , Player Selector ( ) , In Graveyard ( Stalagg ( ) ) ) )
class Druid Of The Flame ( Minion Card ) : def __init__ ( self ) : super ( ) . __init__ ( ` Summoning Portal ` , 4 , CHARACTER_CLASS . ALL , CARD_RARITY . COMMON ) def create_minion ( self , player ) : return Minion ( 0 , 4 , effects = [ Effect ( Spell Cast ( player = Both Player ( ) ) , Action Tag ( Give ( Change Attack ( 1 ) ) , Self Selector ( ) ) ) ] )
class Druid Of The Flame ( Minion Card ) : def __init__ ( self ) : super ( ) . __init__ ( ` Thrallmar Farseer ` , 3 , CHARACTER_CLASS . ALL , CARD_RARITY . COMMON ) def create_minion ( self , player ) : return Minion ( 2 , 3 , effects = [ Effect ( Spell Cast ( player = Both Player ( ) ) , Action Tag ( Give ( Change Attack ( 1 ) ) , Self Selector ( ) ) ) ] )
class Druid Of The Flame ( Spell Card ) : def __init__ ( self ) : super ( ) . __init__ ( ` Upgrade ! ` , 1 , CHARACTER_CLASS . SHAMAN , CARD_RARITY . COMMON ) def use ( self , player , game ) : super ( ) . use ( player , game ) for minion in copy . copy ( game . other_player . minions ) : minion . damage ( player . effective_spell_damage ( 2 ) , self ) game . other_player . hero . damage ( player . effective_spell_damage ( 2 ) , self )
class Wisp ( Minion Card ) : def __init__ ( self ) : super ( ) . __init__ ( ` Wisp ` , 0 , CHARACTER_CLASS . ALL , CARD_RARITY . COMMON ) def create_minion ( self , player ) : return Minion ( 1 , 1 , deathrattle = Deathrattle ( Summon ( Thaddius ( ) ) , Player Selector ( ) , In Graveyard ( Stalagg ( ) ) ) )
class Black ( Minion Card ) : def __init__ ( self ) : super ( ) . __init__ ( ` Black Whelp ` , 1 , CHARACTER_CLASS . ALL , CARD_RARITY . COMMON ) def create_minion ( self , player ) : return Minion ( 2 , 1 , deathrattle = Deathrattle ( Summon ( Thaddius ( ) ) , Player Selector ( ) , In Graveyard ( Stalagg ( ) ) ) )
class Druid Of The Flame ( Minion Card ) : def __init__ ( self ) : super ( ) . __init__ ( ` Dragonkin Sorcerer ` , 4 , CHARACTER_CLASS . ALL , CARD_RARITY . COMMON ) def create_minion ( self , player ) : return Minion ( 3 , 5 , effects = [ Effect ( Spell Cast ( player = Both Player ( ) ) , Action Tag ( Give ( Change Attack ( 1 ) ) , Self Selector ( ) ) ) ] )
class Druid Of The Flame ( Minion Card ) : def __init__ ( self ) : super ( ) . __init__ ( ` Hungry Dragon ` , 4 , CHARACTER_CLASS . ALL , CARD_RARITY . COMMON ) def create_minion ( self , player ) : return Minion ( 5 , 6 , effects = [ Effect ( Spell Cast ( player = Both Player ( ) ) , Action Tag ( Give ( Change Attack ( 1 ) ) , Self Selector ( ) ) ) ] )
class Druid Of The Flame ( Spell Card ) : def __init__ ( self ) : super ( ) . __init__ ( ` Solemn Vigil ` , 5 , CHARACTER_CLASS . MAGE , CARD_RARITY . COMMON ) def use ( self , player , game ) : super ( ) . use ( player , game ) for minion in copy . copy ( game . other_player . minions ) : minion . damage ( player . effective_spell_damage ( 2 ) , self ) game . other_player . hero . damage ( player . effective_spell_damage ( 2 ) , self )
