class Darkscale ( Minion Card ) : def __init__ ( self ) : super ( ) . __init__ ( ` Darkscale Healer ` , 5 , CHARACTER_CLASS . ALL , CARD_RARITY . COMMON , target_func = hearthbreaker . targeting . find_minion_spell_target ) def use ( self , player , game ) : super ( ) . use ( player , game ) self . target . damage ( player . effective_spell_damage ( 1 ) , self )
class Frostwolf ( Minion Card ) : def __init__ ( self ) : super ( ) . __init__ ( ` Frostwolf Warlord ` , 5 , CHARACTER_CLASS . ALL , CARD_RARITY . COMMON , minion_type = MINION_TYPE . BEAST ) def create_minion ( self , player ) : return Minion ( 4 , 4 )
class Magma ( Minion Card ) : def __init__ ( self ) : super ( ) . __init__ ( ` Magma Rager ` , 3 , CHARACTER_CLASS . ALL , CARD_RARITY . COMMON , minion_type = MINION_TYPE . BEAST ) def create_minion ( self , player ) : return Minion ( 5 , 1 )
class Mortal ( Minion Card ) : def __init__ ( self ) : super ( ) . __init__ ( ` Mortal Coil ` , 1 , CHARACTER_CLASS . ALL , CARD_RARITY . COMMON , target_func = hearthbreaker . targeting . find_minion_spell_target ) def use ( self , player , game ) : super ( ) . use ( player , game ) self . target . damage ( player . effective_spell_damage ( 1 ) , self )
class Searing ( Minion Card ) : def __init__ ( self ) : super ( ) . __init__ ( ` Searing Totem ` , 1 , CHARACTER_CLASS . ALL , CARD_RARITY . COMMON , minion_type = MINION_TYPE . BEAST ) def create_minion ( self , player ) : return Minion ( 1 , 1 )
class Silverback ( Minion Card ) : def __init__ ( self ) : super ( ) . __init__ ( ` Silverback Patriarch ` , 3 , CHARACTER_CLASS . ALL , CARD_RARITY . COMMON , target_func = hearthbreaker . targeting . find_minion_spell_target ) def use ( self , player , game ) : super ( ) . use ( player , game ) self . target . damage ( player . effective_spell_damage ( 1 ) , self )
class Stormwind ( Minion Card ) : def __init__ ( self ) : super ( ) . __init__ ( ` Stormwind Knight ` , 4 , CHARACTER_CLASS . ALL , CARD_RARITY . COMMON , target_func = hearthbreaker . targeting . find_minion_spell_target ) def use ( self , player , game ) : super ( ) . use ( player , game ) self . target . damage ( player . effective_spell_damage ( 1 ) , self )
class Voodoo ( Minion Card ) : def __init__ ( self ) : super ( ) . __init__ ( ` Voodoo Doctor ` , 1 , CHARACTER_CLASS . ALL , CARD_RARITY . COMMON , target_func = hearthbreaker . targeting . find_minion_spell_target ) def use ( self , player , game ) : super ( ) . use ( player , game ) self . target . damage ( player . effective_spell_damage ( 1 ) , self )
class Astral ( Minion Card ) : def __init__ ( self ) : super ( ) . __init__ ( ` Astral Communion ` , 4 , CHARACTER_CLASS . ALL , CARD_RARITY . COMMON , target_func = hearthbreaker . targeting . find_minion_spell_target ) def use ( self , player , game ) : super ( ) . use ( player , game ) self . target . damage ( player . effective_spell_damage ( 1 ) , self )
class Floating ( Minion Card ) : def __init__ ( self ) : super ( ) . __init__ ( ` Floating Watcher ` , 5 , CHARACTER_CLASS . ALL , CARD_RARITY . COMMON , minion_type = MINION_TYPE . BEAST ) def create_minion ( self , player ) : return Minion ( 4 , 4 )
class Gnomish ( Minion Card ) : def __init__ ( self ) : super ( ) . __init__ ( ` Gnomish Experimenter ` , 3 , CHARACTER_CLASS . ALL , CARD_RARITY . COMMON , minion_type = MINION_TYPE . BEAST ) def create_minion ( self , player ) : return Minion ( 3 , 2 )
class Iron ( Minion Card ) : def __init__ ( self ) : super ( ) . __init__ ( ` Iron Juggernaut ` , 6 , CHARACTER_CLASS . ALL , CARD_RARITY . COMMON ) def create_minion ( self , player ) : return Minion ( 6 , 5 , effects = [ Effect ( Turn Ended ( ) , Action Tag ( Give ( Change Attack ( 1 ) ) , Self Selector ( ) ) ) ] )
class Madder ( Minion Card ) : def __init__ ( self ) : super ( ) . __init__ ( ` Madder Bomber ` , 5 , CHARACTER_CLASS . ALL , CARD_RARITY . COMMON , target_func = hearthbreaker . targeting . find_minion_spell_target ) def use ( self , player , game ) : super ( ) . use ( player , game ) self . target . damage ( player . effective_spell_damage ( 1 ) , self )
class Scarlet ( Minion Card ) : def __init__ ( self ) : super ( ) . __init__ ( ` Scarlet Purifier ` , 3 , CHARACTER_CLASS . ALL , CARD_RARITY . COMMON , minion_type = MINION_TYPE . BEAST ) def create_minion ( self , player ) : return Minion ( 4 , 3 )
class Siltfin ( Minion Card ) : def __init__ ( self ) : super ( ) . __init__ ( ` Siltfin Spiritwalker ` , 4 , CHARACTER_CLASS . ALL , CARD_RARITY . COMMON , minion_type = MINION_TYPE . BEAST ) def create_minion ( self , player ) : return Minion ( 2 , 5 )
class Tinkertown ( Minion Card ) : def __init__ ( self ) : super ( ) . __init__ ( ` Tinkertown NAME_END ` , 3 , CHARACTER_CLASS . ALL , CARD_RARITY . COMMON , target_func = hearthbreaker . targeting . find_minion_spell_target ) def use ( self , player , game ) : super ( ) . use ( player , game ) self . target . damage ( player . effective_spell_damage ( 3 ) , self )
class Sludge ( Minion Card ) : def __init__ ( self ) : super ( ) . __init__ ( ` Sludge Belcher ` , 5 , CHARACTER_CLASS . ALL , CARD_RARITY . COMMON , target_func = hearthbreaker . targeting . find_minion_spell_target ) def use ( self , player , game ) : super ( ) . use ( player , game ) self . target . damage ( player . effective_spell_damage ( 1 ) , self )
class Alexstrasza ( Minion Card ) : def __init__ ( self ) : super ( ) . __init__ ( ` Alexstrasza NAME_END ` , - 1 , CHARACTER_CLASS . ALL , CARD_RARITY . COMMON , target_func = hearthbreaker . targeting . find_minion_spell_target ) def use ( self , player , game ) : super ( ) . use ( player , game ) self . target . damage ( player . effective_spell_damage ( 1 ) , self )
class Arcane ( Minion Card ) : def __init__ ( self ) : super ( ) . __init__ ( ` Arcane NAME_END ` , 3 , CHARACTER_CLASS . ALL , CARD_RARITY . COMMON ) def create_minion ( self , player ) : return Minion ( 4 , 2 , effects = [ Effect ( Turn Ended ( ) , Action Tag ( Give ( Change Attack ( 1 ) ) , Self Selector ( ) ) ) ] )
class Baine ( Minion Card ) : def __init__ ( self ) : super ( ) . __init__ ( ` Baine Bloodhoof ` , 4 , CHARACTER_CLASS . ALL , CARD_RARITY . COMMON , minion_type = MINION_TYPE . BEAST ) def create_minion ( self , player ) : return Minion ( 4 , 5 )
class Blade ( Minion Card ) : def __init__ ( self ) : super ( ) . __init__ ( ` Blade Flurry ` , 2 , CHARACTER_CLASS . ALL , CARD_RARITY . COMMON , target_func = hearthbreaker . targeting . find_minion_spell_target ) def use ( self , player , game ) : super ( ) . use ( player , game ) self . target . damage ( player . effective_spell_damage ( 1 ) , self )
class Doomguard ( Minion Card ) : def __init__ ( self ) : super ( ) . __init__ ( ` Doomguard NAME_END ` , - 1 , CHARACTER_CLASS . ALL , CARD_RARITY . COMMON , target_func = hearthbreaker . targeting . find_minion_spell_target ) def use ( self , player , game ) : super ( ) . use ( player , game ) self . target . damage ( player . effective_spell_damage ( 1 ) , self )
class Explosive ( Minion Card ) : def __init__ ( self ) : super ( ) . __init__ ( ` Explosive Trap ` , 2 , CHARACTER_CLASS . ALL , CARD_RARITY . COMMON , target_func = hearthbreaker . targeting . find_minion_spell_target ) def use ( self , player , game ) : super ( ) . use ( player , game ) self . target . damage ( player . effective_spell_damage ( 1 ) , self )
class Gnoll ( Minion Card ) : def __init__ ( self ) : super ( ) . __init__ ( ` Gnoll NAME_END ` , 2 , CHARACTER_CLASS . ALL , CARD_RARITY . COMMON , minion_type = MINION_TYPE . BEAST ) def create_minion ( self , player ) : return Minion ( 2 , 2 )
class Holy ( Minion Card ) : def __init__ ( self ) : super ( ) . __init__ ( ` Holy Wrath ` , 5 , CHARACTER_CLASS . ALL , CARD_RARITY . COMMON , target_func = hearthbreaker . targeting . find_minion_spell_target ) def use ( self , player , game ) : super ( ) . use ( player , game ) self . target . damage ( player . effective_spell_damage ( 1 ) , self )
class Infernal ( Minion Card ) : def __init__ ( self ) : super ( ) . __init__ ( ` Infernal NAME_END ` , - 1 , CHARACTER_CLASS . ALL , CARD_RARITY . COMMON , minion_type = MINION_TYPE . BEAST ) def create_minion ( self , player ) : return Minion ( 6 , 6 )
class Mana ( Minion Card ) : def __init__ ( self ) : super ( ) . __init__ ( ` Mana Wraith ` , 2 , CHARACTER_CLASS . ALL , CARD_RARITY . COMMON , minion_type = MINION_TYPE . BEAST ) def create_minion ( self , player ) : return Minion ( 2 , 2 )
class Noble ( Minion Card ) : def __init__ ( self ) : super ( ) . __init__ ( ` Noble Sacrifice ` , 1 , CHARACTER_CLASS . ALL , CARD_RARITY . COMMON , target_func = hearthbreaker . targeting . find_minion_spell_target ) def use ( self , player , game ) : super ( ) . use ( player , game ) self . target . damage ( player . effective_spell_damage ( 1 ) , self )
class Shadow ( Minion Card ) : def __init__ ( self ) : super ( ) . __init__ ( ` Shadow Madness ` , 4 , CHARACTER_CLASS . ALL , CARD_RARITY . COMMON , target_func = hearthbreaker . targeting . find_minion_spell_target ) def use ( self , player , game ) : super ( ) . use ( player , game ) self . target . damage ( player . effective_spell_damage ( 1 ) , self )
class Siphon ( Minion Card ) : def __init__ ( self ) : super ( ) . __init__ ( ` Siphon Soul ` , 6 , CHARACTER_CLASS . ALL , CARD_RARITY . COMMON , target_func = hearthbreaker . targeting . find_minion_spell_target ) def use ( self , player , game ) : super ( ) . use ( player , game ) self . target . damage ( player . effective_spell_damage ( 1 ) , self )
class Summoning ( Minion Card ) : def __init__ ( self ) : super ( ) . __init__ ( ` Summoning Portal ` , 4 , CHARACTER_CLASS . ALL , CARD_RARITY . COMMON , target_func = hearthbreaker . targeting . find_minion_spell_target ) def use ( self , player , game ) : super ( ) . use ( player , game ) self . target . damage ( player . effective_spell_damage ( 1 ) , self )
class Thrallmar ( Minion Card ) : def __init__ ( self ) : super ( ) . __init__ ( ` Thrallmar Farseer ` , 3 , CHARACTER_CLASS . ALL , CARD_RARITY . COMMON , minion_type = MINION_TYPE . BEAST ) def create_minion ( self , player ) : return Minion ( 2 , 3 )
class Upgrade ( Minion Card ) : def __init__ ( self ) : super ( ) . __init__ ( ` Upgrade ! ` , 1 , CHARACTER_CLASS . ALL , CARD_RARITY . COMMON , target_func = hearthbreaker . targeting . find_minion_spell_target ) def use ( self , player , game ) : super ( ) . use ( player , game ) self . target . damage ( player . effective_spell_damage ( 1 ) , self )
class Black ( Minion Card ) : def __init__ ( self ) : super ( ) . __init__ ( ` Black Whelp ` , 1 , CHARACTER_CLASS . ALL , CARD_RARITY . COMMON , minion_type = MINION_TYPE . BEAST ) def create_minion ( self , player ) : return Minion ( 2 , 1 )
class Dragonkin ( Minion Card ) : def __init__ ( self ) : super ( ) . __init__ ( ` Dragonkin Sorcerer ` , 4 , CHARACTER_CLASS . ALL , CARD_RARITY . COMMON , target_func = hearthbreaker . targeting . find_minion_spell_target ) def use ( self , player , game ) : super ( ) . use ( player , game ) self . target . damage ( player . effective_spell_damage ( 1 ) , self )
class Hungry ( Minion Card ) : def __init__ ( self ) : super ( ) . __init__ ( ` Hungry Dragon ` , 4 , CHARACTER_CLASS . ALL , CARD_RARITY . COMMON , target_func = hearthbreaker . targeting . find_minion_spell_target ) def use ( self , player , game ) : super ( ) . use ( player , game ) self . target . damage ( player . effective_spell_damage ( 1 ) , self )
class Solemn ( Minion Card ) : def __init__ ( self ) : super ( ) . __init__ ( ` Solemn Vigil ` , 5 , CHARACTER_CLASS . ALL , CARD_RARITY . COMMON , target_func = hearthbreaker . targeting . find_minion_spell_target ) def use ( self , player , game ) : super ( ) . use ( player , game ) self . target . damage ( player . effective_spell_damage ( 1 ) , self )
